CREATE DATABASE NEW_COLLEGE;
USE NEW_COLLEGE;

CREATE TABLE STUDENT(
	rollno INT PRIMARY KEY,
    name VARCHAR(50),
    marks INT NOT NULL,
    grade VARCHAR(1),
    city VARCHAR(20)
);

INSERT INTO STUDENT 
(rollno, name, marks, grade, city)
VALUES 
(101, "ANIL", 78, "C", "PUNE"),
(102, "BHUMIKA", 93, "A", "MUMBAI"),
(103, "CHETAN", 85, "B", "MUMBAI"),
(104, "DHRUV", 96, "A", "DELHI"),
(105, "EMANUEL", 12, "F", "DELHI"),
(106, "FARAH", 82, "B", "DELHI");

SELECT name, marks from student;
SELECT DISTINCT city from student;
SELECT * FROM student WHERE (city = "Mumbai");
SELECT * FROM STUDENT WHERE (marks+10 > 100);
SELECT * FROM STUDENT WHERE (marks > 90 OR city = "Mumbai");
SELECT * FROM STUDENT WHERE (marks BETWEEN 80 AND 90);
SELECT * FROM STUDENT WHERE (city in ("Delhi", "MUMBAI"));
SELECT * FROM STUDENT WHERE (city NOT in ("Delhi", "Mumbai")); 
SELECT * FROM STUDENT WHERE (marks > 75) LIMIT 2;
SELECT * FROM STUDENT ORDER BY city ASC;
SELECT * FROM STUDENT ORDER BY marks DESC LIMIT 3;
SELECT * FROM STUDENT WHERE (city = (SELECT MIN(city) from STUDENT));
SELECT COUNT(DISTINCT CITY) FROM STUDENT;
SELECT CITY, COUNT(NAME) FROM STUDENT GROUP BY CITY;
SELECT * FROM (SELECT CITY, AVG(MARKS) AS AVERAGE_MARKS FROM STUDENT GROUP BY CITY) AS city_averages ORDER BY AVERAGE_MARKS ASC;
SELECT CITY, AVG(MARKS) FROM STUDENT GROUP BY CITY ORDER BY AVG(MARKS);

CREATE TABLE PAYMENT_TABLE (
	CUSTOMER_ID INT PRIMARY KEY,
    CUSTOMER VARCHAR(50),
    MODE VARCHAR(30),
    CITY VARCHAR(20)
);

INSERT INTO PAYMENT_TABLE 
(CUSTOMER_ID, CUSTOMER, MODE, CITY)
VALUES
(101, "OLIVIA BARRET", "NETBANKING", "PORTLAND"),
(102, "ETHAN SINCLAIR", "CREDIT CARD", "MIAMI"),
(103, "MAYA HERNANDEZ", "CREDIT CARD", "SEATTLE"),
(104, "LIAM DONOVAN", "NETBANKING", "DENVER"),
(105, "SOPHIA NGUYEN", "CREDIT CARD", "NEW ORLEANS"),
(106, "CALEB FOSTER", "DEBIT CARD", "MINNEAPOLIS"),
(107, "AVA PATEL", "DEBIT CARD", "PHOENIX"),
(108, "LUCAS CARTER", "NETBANKING", "BOSTON"),
(109, "ISABELLA MARTINEZ", "NETBANKING", "NASHVILLE"),
(110, "JACKSON BROOKS", "CREDIT CARD", "BOSTON");

SELECT MODE, COUNT(MODE) AS NUMBER_OF_PAYMENTS FROM PAYMENT_TABLE GROUP BY MODE;

SELECT GRADE, COUNT(ROLLNO) FROM STUDENT GROUP BY GRADE;

INSERT INTO STUDENT VALUES(107, "FARAH", 96, "A", "DELHI");

SELECT CITY, COUNT(ROLLNO) FROM (SELECT * FROM STUDENT WHERE MARKS>90) AS MAX_MARKS_TABLE GROUP BY CITY;
SELECT CITY, COUNT(ROLLNO) FROM STUDENT WHERE MARKS > 90 GROUP BY CITY;
SELECT CITY, COUNT(ROLLNO) FROM STUDENT GROUP BY CITY HAVING MAX(MARKS) > 90;

SET SQL_SAFE_UPDATES = 0;

UPDATE STUDENT
SET GRADE = "0"
WHERE GRADE = "A";

SELECT * FROM STUDENT;

UPDATE STUDENT 
SET MARKS = "82"
WHERE NAME = "EMANUEL";

UPDATE STUDENT 
SET GRADE = "B"
WHERE MARKS BETWEEN 80 AND 90;

UPDATE STUDENT 
SET MARKS = MARKS + 1;

UPDATE STUDENT
SET MARKS = 12
WHERE ROLLNO = 105;

SELECT * FROM STUDENT;

DELETE FROM STUDENT
WHERE MARKS < 33;

CREATE TABLE DEPT (
	ID INT PRIMARY KEY,
    NAME VARCHAR(50)
);

INSERT INTO DEPT 
(ID, NAME)
VALUES
(101, "CSE"),
(102, "ICE");

UPDATE DEPT
SET ID = "104"
WHERE NAME = "ICE";

CREATE TABLE TEACHERS(
	ID INT PRIMARY KEY,
    NAME VARCHAR(50),
    DEPT_ID INT,
    FOREIGN KEY(DEPT_ID) REFERENCES DEPT(ID)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

INSERT INTO TEACHERS
VALUES
(001, "ADAM", 101),
(002, "MOHAN", 103);

SELECT * FROM TEACHERS;

ALTER TABLE STUDENT
ADD COLUMN AGE INT NOT NULL DEFAULT 19;

SELECT * FROM STUDENT;

ALTER TABLE STUDENT
DROP COLUMN AGE;

ALTER TABLE STUDENT_TABLE
RENAME TO STUDENT;

ALTER TABLE STUDENT
CHANGE COLUMN STUDENT_NAME NAME VARCHAR(50);

ALTER TABLE STUDENT
MODIFY ROLLNO INT;

ALTER TABLE STUDENT
CHANGE COLUMN NAME full_name VARCHAR(50);

SELECT * FROM STUDENT;

DELETE FROM STUDENT
WHERE MARKS < 80;

ALTER TABLE STUDENT
DROP COLUMN AGE;

CREATE TABLE COURSE(
	ROLLNO INT,
    NAME VARCHAR(50)
);

DROP TABLE COURSE;

INSERT INTO COURSE
VALUES
(102, "CSE"),
(103, "ICE"),
(104, "EE"),
(106, "ME"),
(107, "CSAI"),
(108, "CSDS");

SELECT * FROM COURSE;

SELECT * FROM STUDENT;

DELETE FROM STUDENT 
WHERE ROLLNO = 108;

SELECT * 
FROM STUDENT
INNER JOIN COURSE
ON STUDENT.ROLLNO = COURSE.ROLLNO;

SELECT * FROM STUDENT;

CREATE TABLE LEFT_ONE(
	ID INT,
	S_NAME VARCHAR(30)
);

CREATE TABLE RIGHT_ONE(
	ID INT,
	C_NAME VARCHAR(30)
);

INSERT INTO LEFT_ONE
VALUES
(1, "ADITYA"),
(2, "ROHAN");

INSERT INTO RIGHT_ONE
VALUES
(1, "ICE"),
(2, "CSE"),
(3, "ME");

UPDATE RIGHT_ONE
SET ID = 0
WHERE ID = 1;

SELECT *
FROM LEFT_ONE AS L 
LEFT JOIN RIGHT_ONE AS R 
ON L.ID = R.ID
WHERE R.ID IS NULL
UNION
SELECT *
FROM LEFT_ONE AS L
RIGHT JOIN RIGHT_ONE AS R
ON L.ID = R.ID
WHERE L.ID IS NULL;

SELECT *
FROM STUDENT AS S
LEFT JOIN COURSE AS C
ON S.ROLLNO = C.ROLLNO
WHERE S.ROLLNO IS NULL;

SELECT *
FROM STUDENT AS S
RIGHT JOIN COURSE AS C
ON S.ROLLNO = C.ROLLNO
WHERE S.ROLLNO IS NULL;

SELECT * FROM COURSE;
SELECT * FROM STUDENT;

CREATE TABLE EMPLOYEE(
	ID INT PRIMARY KEY,
    NAME VARCHAR(30),
    MANAGER_ID INT
);

INSERT INTO EMPLOYEE
VALUES
(101, "ADAM", 103),
(102, "BOB", 104),
(103, "CASEY", NULL),
(104, "DONALD", 103);

SELECT B.NAME, A.NAME AS MANAGER_NAME
FROM EMPLOYEE AS A
JOIN EMPLOYEE AS B
ON A.ID = B.MANAGER_ID;

SELECT * FROM LEFT_ONE
UNION ALL
SELECT * FROM LEFT_ONE;

SELECT * FROM STUDENT;

SELECT full_name FROM STUDENT WHERE (MARKS > (SELECT AVG(MARKS) FROM STUDENT));

SELECT ROLLNO FROM STUDENT WHERE (ROLLNO % 2 = 0);

SELECT ROLLNO, full_name 
FROM STUDENT 
WHERE ROLLNO IN (SELECT ROLLNO FROM STUDENT WHERE (ROLLNO % 2 = 0));

SELECT MAX(MARKS) FROM (SELECT * FROM STUDENT WHERE CITY = "DELHI") AS DELHI_CITY_TABLE; 
SELECT CITY, MAX(MARKS) AS MAXIMUM_MARKS FROM STUDENT GROUP BY CITY;
SELECT MAXIMUM_MARKS FROM (SELECT CITY, MAX(MARKS) AS MAXIMUM_MARKS FROM STUDENT GROUP BY CITY) AS MAX_MARKS_PER_CITY WHERE CITY = "DELHI";

SELECT (SELECT MAX(MARKS) FROM STUDENT), full_name FROM STUDENT;

CREATE VIEW VIEW1 AS 
SELECT ROLLNO, full_name, marks FROM STUDENT;

DROP VIEW VIEW1;

SELECT * FROM VIEW1;